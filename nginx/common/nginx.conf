# /etc/nginx/nginx.conf

user root;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

#PID folder
pid /run/nginx.pid;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 10m;

	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout 600;

	# Nginxとアプリケーション間のタイムアウト設定
    proxy_send_timeout      600;
    proxy_read_timeout      600;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;


	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	ssl_session_cache shared:SSL:2m;

	# Enable gzipping of responses.
	#gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Enable checking the existence of precompressed files.
	#gzip_static on;

	# Specifies the main log format.
	log_format main escape=json '{"date_time": "$time_iso8601",'
		'"time_ms": "$msec",'
		'"ip": "$http_x_forwarded_for",'
		'"host": "$host",'
		'"req_time": "$request_time",'
		'"ups_time": "$upstream_response_time",'
		'"run_time": "$upstream_http_x_runtime",'
		'"status": "$status",'
		'"bytes_recv": "$request_length",'
		'"bytes_sent": "$body_bytes_sent",'
		'"method": "$request_method",'
		'"uri": "$request_uri",'
		'"ua": "$http_user_agent",'
		'"referer": "$http_referer",'
		'"x_forwarded_for": "$proxy_add_x_forwarded_for",'
		'"request_body": "$request_body"'
		'}';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;

	# Includes virtual hosts configs.
	include /etc/nginx/conf.d/*.conf;

}