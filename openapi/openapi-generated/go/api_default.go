/*
 * go-housework
 *
 * 家事タスクを管理するAPIサーバです。
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{ service: s }
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{ 
		{
			"CreateFamily",
			strings.ToUpper("Post"),
			"/family",
			c.CreateFamily,
		},
		{
			"CreateTask",
			strings.ToUpper("Post"),
			"/task",
			c.CreateTask,
		},
		{
			"CreateUser",
			strings.ToUpper("Post"),
			"/user",
			c.CreateUser,
		},
		{
			"DeleteFamily",
			strings.ToUpper("Delete"),
			"/family",
			c.DeleteFamily,
		},
		{
			"DeleteFamilyMember",
			strings.ToUpper("Delete"),
			"/family/member/{member_id}",
			c.DeleteFamilyMember,
		},
		{
			"DeleteTask",
			strings.ToUpper("Delete"),
			"/task/{task_id}",
			c.DeleteTask,
		},
		{
			"DeleteUser",
			strings.ToUpper("Delete"),
			"/user",
			c.DeleteUser,
		},
		{
			"GetHealth",
			strings.ToUpper("Get"),
			"/health",
			c.GetHealth,
		},
		{
			"ListFamilyMembers",
			strings.ToUpper("Get"),
			"/family/members",
			c.ListFamilyMembers,
		},
		{
			"ListTasks",
			strings.ToUpper("Get"),
			"/tasks",
			c.ListTasks,
		},
		{
			"Login",
			strings.ToUpper("Post"),
			"/login",
			c.Login,
		},
		{
			"RegisterFamilyMember",
			strings.ToUpper("Post"),
			"/family/member",
			c.RegisterFamilyMember,
		},
		{
			"ResetPassword",
			strings.ToUpper("Put"),
			"/password",
			c.ResetPassword,
		},
		{
			"ShowFamily",
			strings.ToUpper("Get"),
			"/family",
			c.ShowFamily,
		},
		{
			"UpdateFamily",
			strings.ToUpper("Put"),
			"/family",
			c.UpdateFamily,
		},
		{
			"UpdateTask",
			strings.ToUpper("Put"),
			"/task",
			c.UpdateTask,
		},
	}
}

// CreateFamily - 世帯登録API
func (c *DefaultApiController) CreateFamily(w http.ResponseWriter, r *http.Request) { 
	requestCreateFamily := &RequestCreateFamily{}
	if err := json.NewDecoder(r.Body).Decode(&requestCreateFamily); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.CreateFamily(*requestCreateFamily)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// CreateTask - 家事タスク登録API
func (c *DefaultApiController) CreateTask(w http.ResponseWriter, r *http.Request) { 
	requestCreateTask := &RequestCreateTask{}
	if err := json.NewDecoder(r.Body).Decode(&requestCreateTask); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.CreateTask(*requestCreateTask)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// CreateUser - ユーザ登録API
func (c *DefaultApiController) CreateUser(w http.ResponseWriter, r *http.Request) { 
	requestCreateUser := &RequestCreateUser{}
	if err := json.NewDecoder(r.Body).Decode(&requestCreateUser); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.CreateUser(*requestCreateUser)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeleteFamily - 世帯情報削除API
func (c *DefaultApiController) DeleteFamily(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.DeleteFamily()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeleteFamilyMember - 世帯メンバ削除API
func (c *DefaultApiController) DeleteFamilyMember(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	memberId, err := parseIntParameter(params["memberId"])
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.DeleteFamilyMember(memberId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeleteTask - 家事タスク削除API
func (c *DefaultApiController) DeleteTask(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	taskId, err := parseIntParameter(params["taskId"])
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.DeleteTask(taskId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeleteUser - ユーザ削除API
func (c *DefaultApiController) DeleteUser(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.DeleteUser()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetHealth - 死活監視API
func (c *DefaultApiController) GetHealth(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetHealth()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// ListFamilyMembers - 世帯メンバ一覧取得API
func (c *DefaultApiController) ListFamilyMembers(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.ListFamilyMembers()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// ListTasks - 家事タスク一覧取得API
func (c *DefaultApiController) ListTasks(w http.ResponseWriter, r *http.Request) { 
	query := r.URL.Query()
	date := query.Get("date")
	result, err := c.service.ListTasks(date)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// Login - ログインAPI
func (c *DefaultApiController) Login(w http.ResponseWriter, r *http.Request) { 
	query := r.URL.Query()
	userName := query.Get("userName")
	password := query.Get("password")
	result, err := c.service.Login(userName, password)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// RegisterFamilyMember - 世帯メンバ登録API
func (c *DefaultApiController) RegisterFamilyMember(w http.ResponseWriter, r *http.Request) { 
	requestRegisterFamilyMember := &RequestRegisterFamilyMember{}
	if err := json.NewDecoder(r.Body).Decode(&requestRegisterFamilyMember); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.RegisterFamilyMember(*requestRegisterFamilyMember)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// ResetPassword - パスワードリセットAPI
func (c *DefaultApiController) ResetPassword(w http.ResponseWriter, r *http.Request) { 
	requestResetPassword := &RequestResetPassword{}
	if err := json.NewDecoder(r.Body).Decode(&requestResetPassword); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.ResetPassword(*requestResetPassword)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// ShowFamily - 世帯詳細情報取得API
func (c *DefaultApiController) ShowFamily(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.ShowFamily()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// UpdateFamily - 世帯情報更新API
func (c *DefaultApiController) UpdateFamily(w http.ResponseWriter, r *http.Request) { 
	requestUpdateFamily := &RequestUpdateFamily{}
	if err := json.NewDecoder(r.Body).Decode(&requestUpdateFamily); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.UpdateFamily(*requestUpdateFamily)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// UpdateTask - 家事タスク更新API
func (c *DefaultApiController) UpdateTask(w http.ResponseWriter, r *http.Request) { 
	requestUpdateTask := &RequestUpdateTask{}
	if err := json.NewDecoder(r.Body).Decode(&requestUpdateTask); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.UpdateTask(*requestUpdateTask)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
