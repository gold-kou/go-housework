# TODO もっとDRYに書けそう
openapi: 3.0.0
info:
  version: 1.0.0
  title: go-housework
  description: 家事タスクを管理するAPIサーバです。
servers:
  - url: http://localhost:8080
    description: Development local server
  - url: https://XXXX.com
    description: Production server
paths:
  /health:
    get:
      summary: 死活監視API
      description: HTTPレベルでAPIサーバを死活監視するためのAPI。
      operationId: getHealth
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseGetHealth'
  /user:
    post:
      summary: ユーザ登録API
      description: ユーザ情報を登録するAPI
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateUser'
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseCreateUser'
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError' 
    delete:
      security:
        - bearerAuth: []
      summary: ユーザ削除API
      description: ユーザ情報(自身のみ)を削除するAPI
      operationId: deleteUser
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseDeleteUser'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'    
  /password:
    put:
      summary: パスワードリセットAPI
      description: パスワードをリセットするAPI。パスワード忘れ時に使用。
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestResetPassword'
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseResetPassword'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /login:
    post:
      summary: ログインAPI
      description: ログインAPI
      operationId: login
      parameters:
        - in: query
          name: email
          description: Email
          required: true
          schema:
            type: string
            example: 'test@example.com'
        - in: query
          name: password
          description: Password
          required: true
          schema:
            type: string
            example: '1234'    
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseLogin'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /family:
    post:
      security:
        - bearerAuth: []
      summary: 世帯登録API
      description: 世帯を登録するAPI。登録者が世帯管理者となる。世帯管理者は変更できない。
      operationId: createFamily
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateFamily'
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseCreateFamily'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
    get:
      security:
        - bearerAuth: []
      summary: 世帯詳細情報取得API
      description: 世帯詳細情報を取得するAPI。世帯管理者のみ実行可能。
      operationId: showFamily
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseShowFamily'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
    put:
      security:
        - bearerAuth: []
      summary: 世帯情報更新API
      description: 世帯情報を更新するAPI。世帯管理者のみ実行可能。
      operationId: updateFamily
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateFamily'
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUpdateFamily'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
    delete:
      security:
        - bearerAuth: []
      summary: 世帯情報削除API
      description: 世帯情報を削除するAPI。世帯管理者のみ実行可能。
      operationId: deleteFamily
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseDeleteFamily'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /family/member:
    post:
      security:
        - bearerAuth: []
      summary: 世帯メンバ登録API
      description: 自身の管理する世帯にメンバを登録するAPI。世帯管理者のみ実行可能。
      operationId: registerFamilyMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRegisterFamilyMember'
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseRegisterFamilyMember'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /family/member/{member_id}:
    delete:
      security:
        - bearerAuth: []
      summary: 世帯メンバ削除API
      description: 自身の管理する世帯メンバを削除するAPI。世帯管理者のみ実行可能。
      parameters:
        - in: path
          name: member_id
          description: 世帯メンバID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseDeleteFamilyMember'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '404':
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseNotFound'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /family/members:
    get: 
      security:
        - bearerAuth: []
      summary: 世帯メンバ一覧取得API
      description: 自身の管理する世帯メンバ一覧を取得するAPI。世帯管理者のみ実行可能。
      operationId: listFamilyMembers
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseListFamilyMembers'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /task:
    post:
      security:
        - bearerAuth: []
      summary: 家事タスク登録API
      description: 自身の所属する世帯に家事タスクを作成するAPI
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateTask'
      responses:
        '200':
          description: Success Response
          content:
          
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseCreateTask'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
    put:
      security:
        - bearerAuth: []
      summary: 家事タスク更新API
      description: 自身の所属する世帯の家事タスクを更新するAPI。タスク名、担当者名、ステータスを変更可能。
      operationId: updateTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateTask'
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUpdateTask'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /task/{task_id}:  
    delete:
      security:
        - bearerAuth: []
      summary: 家事タスク削除API
      description: 自身の所属する世帯の家事タスクを削除するAPI
      operationId: deleteTask
      parameters:
        - in: path
          name: task_id
          description: 家事タスクID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseDeleteTask'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '404':
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseNotFound'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  /tasks:
    get:
      security:
        - bearerAuth: []
      summary: 家事タスク一覧取得API
      description: 自身の所属する世帯の家事タスク一覧を取得するAPI
      operationId: listTasks
      responses:
        '200':
          description: Success Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseListTasks'  
        '400':
          description: Bad Request Response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBadRequest'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseUnauthorized'
        '500':
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseInternalServerError'
  
components:
  securitySchemes:
    bearerAuth:
      description: JWT
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    # common
    Member:
      description: Memberスキーマ
      type: object
      properties:
        member_id:
          description: 家族メンバID
          type: integer
          format: int64
          example: 1
        member_name:
          description: 家族メンバ名。ユーザ名と一致する。
          type: string
          example: 'LeBron'
      required:
        - member_id
        - member_name 
    Task:
      description: Taskスキーマ
      type: object
      properties:
        task_id:
          description: 家事タスクID
          type: integer
          format: int64
          example: 1
        task_name:
          description: 家事タスク名
          type: string
          example: 'Cooking lunch'
        member_name:
          description: ユーザ名。家事の担当者。
          type: string
          example: 'LeBron'
        status:
          description: 家事進捗ステータス
          type: string
          enum:
            - 'todo'
            - 'done'
    # Request
    RequestCreateUser:
      description: createUserのリクエストスキーマ
      type: object
      properties:
        email:
          description: Email
          type: string
          example: 'test@example.com'
        user_name:
          description: ユーザ名
          type: string
          example: 'test'
        password:
          description: パスワード
          type: string
          example: '1234'
      required:
        - email
        - user_name
        - password
    RequestResetPassword:
      description: createUserのリクエストスキーマ
      type: object
      properties:
        email:
          description: Email
          type: string
          example: 'test@example.com'
      required:
        - email    
    RequestCreateFamily:
      description: createFamilyのリクエストスキーマ
      type: object
      properties:
        family_name:
          description: 家族名
          type: string
          example: 'James'
      required:
        - family_name
    RequestUpdateFamily:
      description: updateFamilyのリクエストスキーマ。現状、家族名のみ変更可能なため、family_nameを必須プロパティとしている。
      type: object
      properties:
        family_name:
          description: 家族名
          type: string
          example: 'James'
      required:
        - family_name
    RequestRegisterFamilyMember:
      description: registerFamilyMemberのリクエストスキーマ
      type: object
      properties:
        member_name:
          description: メンバ名。ユーザ名と一致。
          type: string
          example: 'LeBron'
      required:
        - member_name
    RequestCreateTask:
      description: createTaskのリクエストスキーマ
      type: object
      properties:
        task_name:
          description: 家事タスク名
          type: string
          example: 'Cooking lunch'
        member_name:
          description: ユーザ名。家事の担当者。
          type: string
          example: 'LeBron'
        status: 
          description: 家事進捗ステータス
          type: string
          enum:
            - 'todo'
            - 'done'
      required:
        - task_name
        - member_name
        - status
    RequestUpdateTask:
      description: updateTaskのリクエストスキーマ
      type: object
      properties:
        task_id:
          description: 家事タスクID
          type: integer
          format: int64
          example: 1
        task_name:
          description: 家事タスク名
          type: string
          example: 'Cooking lunch'
        member_name:
          description: ユーザ名。家事の担当者。
          type: string
          example: 'LeBron'
        status:
          description: 家事進捗ステータス
          type: string
          enum:
            - 'todo'
            - 'done'
      required:
        - task_id
    
    # Response
    ResponseGetHealth:
      description: ヘルスチェックAPIの正常系レスポンススキーマ
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'The health check is clear.'
      required:
        - message
    ResponseCreateUser:
      description: ユーザ登録APIの正常系レスポンススキーマ
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'The user registration is completed.'
      required:
        - message
    ResponseDeleteUser:
      description: ユーザ削除APIの正常系レスポンススキーマ
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'The user delete is completed.'
      required:
        - message
    ResponseResetPassword:
      description: パスワードリセットAPIの正常系レスポンススキーマ
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'The password reset is completed.'
      required:
        - message
    ResponseLogin:
      description: ログインAPIの正常系レスポンススキーマ
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'Login successed.'
      required:
        - message
    ResponseCreateFamily:
      description: 世帯登録APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
      required:
        - family_id
        - family_name
    ResponseUpdateFamily:
      description: 世帯更新APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
      required:
        - family_id
        - family_name
    ResponseShowFamily:
      description: 世帯詳細情報取得APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
        members:
          description: 家族メンバ情報の集合
          type: array
          items:
            $ref: '#/components/schemas/Member'  
      required:
        - family_id
        - family_name
        - members
    ResponseDeleteFamily:
      description: 世帯削除APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
      required:
        - family_id
        - family_name
    ResponseRegisterFamilyMember:
      description: 世帯詳細情報取得APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
        member_id:
          description: 家族メンバID
          type: integer
          format: int64
          example: 1
        member_name:
          description: 家族メンバ名。ユーザ名と一致する。
          type: string
          example: 'LeBron'
    ResponseListFamilyMembers:
      description: 世帯メンバ情報一覧取得APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
        members:
          description: 家族メンバ情報の集合
          type: array
          items:
            $ref: '#/components/schemas/Member'  
      required:
        - family_id
        - family_name
        - members
    ResponseDeleteFamilyMember:
      description: 世帯メンバ削除APIの正常系レスポンススキーマ
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'The user is deleted.'
      required:
        - message
    ResponseCreateTask:
      description: 家事タスク作成APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
        task_id:
          description: 家事タスクID
          type: integer
          format: int64
          example: 1
        task_name:
          description: 家事タスク名
          type: string
          example: 'Cooking lunch'
        member_name:
          description: ユーザ名。家事の担当者。
          type: string
          example: 'LeBron'
        status:
          description: 家事進捗ステータス
          type: string
          enum:
            - 'todo'
            - 'done'
      required:
        - family_id
        - family_name
        - task_id
        - task_name
        - status
        - member_name
    ResponseUpdateTask:
      description: 家事タスク更新APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
        task_id:
          description: 家事タスクID
          type: integer
          format: int64
          example: 1
        task_name:
          description: 家事タスク名
          type: string
          example: 'Cooking lunch'
        member_name:
          description: ユーザ名。家事の担当者。
          type: string
          example: 'LeBron'
        status:
          description: 家事進捗ステータス
          type: string
          enum:
            - 'todo'
            - 'done'
    ResponseDeleteTask:
      description: 世帯メンバ削除APIの正常系レスポンススキーマ
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'The task is deleted.'
      required:
        - message
    ResponseListTasks:
      description: 家事タスク更新APIの正常系レスポンススキーマ
      type: object
      properties:
        family_id:
          description: 家族ID。UUID。
          type: string
          example: '342a0640-8443-462f-afd0-93940c9278f5'
        family_name: 
          description: 家族名
          type: string
          example: 'James'
        tasks:
          description: 家事タスク情報の集合
          type: array
          items:
            $ref: '#/components/schemas/Task' 
      required:
        - family_id
        - family_name
        - tasks
    ResponseBadRequest:
      description: Bad Reqeust
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'Something Bad Request Error'
      required:
        - message
    ResponseUnauthorized:
      description: Unauthorized
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'Something Unauthorized Error'
      required:
        - message
    ResponseNotFound:
      description: Not Found
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'Something Not Found Error'
      required:
        - message
    ResponseInternalServerError:
      description: Internal Server Error
      type: object
      properties:
        message:
          description: HTTPレスポンスメッセージ
          type: string
          example: 'Something Internal Server Error'
      required:
        - message    
