// Code generated by MockGen. DO NOT EDIT.
// Source: show_family.go

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/gold-kou/go-housework/app/model"
	db "github.com/gold-kou/go-housework/app/model/db"
	reflect "reflect"
)

// MockShowFamilyServiceInterface is a mock of ShowFamilyServiceInterface interface
type MockShowFamilyServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockShowFamilyServiceInterfaceMockRecorder
}

// MockShowFamilyServiceInterfaceMockRecorder is the mock recorder for MockShowFamilyServiceInterface
type MockShowFamilyServiceInterfaceMockRecorder struct {
	mock *MockShowFamilyServiceInterface
}

// NewMockShowFamilyServiceInterface creates a new mock instance
func NewMockShowFamilyServiceInterface(ctrl *gomock.Controller) *MockShowFamilyServiceInterface {
	mock := &MockShowFamilyServiceInterface{ctrl: ctrl}
	mock.recorder = &MockShowFamilyServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShowFamilyServiceInterface) EXPECT() *MockShowFamilyServiceInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockShowFamilyServiceInterface) Execute(arg0 *model.Auth) (*db.Family, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0)
	ret0, _ := ret[0].(*db.Family)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute
func (mr *MockShowFamilyServiceInterfaceMockRecorder) Execute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockShowFamilyServiceInterface)(nil).Execute), arg0)
}
