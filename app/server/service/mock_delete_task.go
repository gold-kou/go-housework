// Code generated by MockGen. DO NOT EDIT.
// Source: delete_task.go

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/gold-kou/go-housework/app/model"
	reflect "reflect"
)

// MockDeleteTaskServiceInterface is a mock of DeleteTaskServiceInterface interface
type MockDeleteTaskServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteTaskServiceInterfaceMockRecorder
}

// MockDeleteTaskServiceInterfaceMockRecorder is the mock recorder for MockDeleteTaskServiceInterface
type MockDeleteTaskServiceInterfaceMockRecorder struct {
	mock *MockDeleteTaskServiceInterface
}

// NewMockDeleteTaskServiceInterface creates a new mock instance
func NewMockDeleteTaskServiceInterface(ctrl *gomock.Controller) *MockDeleteTaskServiceInterface {
	mock := &MockDeleteTaskServiceInterface{ctrl: ctrl}
	mock.recorder = &MockDeleteTaskServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeleteTaskServiceInterface) EXPECT() *MockDeleteTaskServiceInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockDeleteTaskServiceInterface) Execute(arg0 *model.Auth, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockDeleteTaskServiceInterfaceMockRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockDeleteTaskServiceInterface)(nil).Execute), arg0, arg1)
}
