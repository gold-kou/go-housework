// Code generated by MockGen. DO NOT EDIT.
// Source: login.go

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLoginServiceInterface is a mock of LoginServiceInterface interface
type MockLoginServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLoginServiceInterfaceMockRecorder
}

// MockLoginServiceInterfaceMockRecorder is the mock recorder for MockLoginServiceInterface
type MockLoginServiceInterfaceMockRecorder struct {
	mock *MockLoginServiceInterface
}

// NewMockLoginServiceInterface creates a new mock instance
func NewMockLoginServiceInterface(ctrl *gomock.Controller) *MockLoginServiceInterface {
	mock := &MockLoginServiceInterface{ctrl: ctrl}
	mock.recorder = &MockLoginServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoginServiceInterface) EXPECT() *MockLoginServiceInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockLoginServiceInterface) Execute(arg0, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute
func (mr *MockLoginServiceInterfaceMockRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockLoginServiceInterface)(nil).Execute), arg0, arg1)
}
