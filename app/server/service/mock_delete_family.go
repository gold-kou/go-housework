// Code generated by MockGen. DO NOT EDIT.
// Source: delete_family.go

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/gold-kou/go-housework/app/model"
	reflect "reflect"
)

// MockDeleteFamilyServiceInterface is a mock of DeleteFamilyServiceInterface interface
type MockDeleteFamilyServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteFamilyServiceInterfaceMockRecorder
}

// MockDeleteFamilyServiceInterfaceMockRecorder is the mock recorder for MockDeleteFamilyServiceInterface
type MockDeleteFamilyServiceInterfaceMockRecorder struct {
	mock *MockDeleteFamilyServiceInterface
}

// NewMockDeleteFamilyServiceInterface creates a new mock instance
func NewMockDeleteFamilyServiceInterface(ctrl *gomock.Controller) *MockDeleteFamilyServiceInterface {
	mock := &MockDeleteFamilyServiceInterface{ctrl: ctrl}
	mock.recorder = &MockDeleteFamilyServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeleteFamilyServiceInterface) EXPECT() *MockDeleteFamilyServiceInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockDeleteFamilyServiceInterface) Execute(arg0 *model.Auth) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockDeleteFamilyServiceInterfaceMockRecorder) Execute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockDeleteFamilyServiceInterface)(nil).Execute), arg0)
}
